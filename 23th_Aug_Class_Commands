Install Git
==================
Link : https://git-scm.com/download/linux

1: apt-get update  ----- No need to run on GitBash
2: apt-get install git  ---- No need to run on GitBash

GitMachine $ git

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
GitMachine $

GitMachine $ git --version
git version 2.34.1
GitMachine $

=============================================================
Start From Here in GitBASH

Configuring Git

git config --global user.name "Your_Name"
git config --global user.email "Your_Email"
git config --global core.editor "Path_of_Editor_SW"
git config --list

git config --global user.name "Kumar"
git config --global user.email "kumar@example.com"
git config --global core.editor "vi"
git config --list

git <verb> <switch>

===================================================

How to opemn the file:
https://app.diagrams.net/
======================================================


GitMachine $ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file1.txt

nothing added to commit but untracked files present (use "git add" to track)
GitMachine $

GitMachine $ git add file1.txt
GitMachine $
GitMachine $ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   file1.txt

GitMachine $


GitMachine $ git commit -m "File1 added "
[master (root-commit) c6aad96] File1 added
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file1.txt
GitMachine $


GitMachine $ git status
On branch master
nothing to commit, working tree clean
GitMachine $


====================================

========================================

GitMachine $ git commit  -m "Added new file2"
[master 628b3b4] Added new file2
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 myfile2
GitMachine $



GitMachine $ git log
commit 628b3b490a0480822cbc5a0dc474487804139237 (HEAD -> master)
Author: DevOps <devops@example.com>
Date:   Thu Aug 10 07:29:45 2023 +0530

    Added new file2



Modified the file:
----------------------

myFile1  myfile2
GitMachine $ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   myFile1

no changes added to commit (use "git add" and/or "git commit -a")
GitMachine $


GitMachine $ git diff   -------------------------> 
diff --git a/myfile2 b/myfile2
index e69de29..b2ed0cc 100644
--- a/myfile2
+++ b/myfile2
@@ -0,0 +1,2 @@
+this is my python code
+I am working on Git
\ No newline at end of file
GitMachine $



GitMachine $ git diff
diff --git a/myfile2 b/myfile2
index b2ed0cc..6d828ea 100644
--- a/myfile2
+++ b/myfile2
@@ -1,2 +1,2 @@
-this is my python code
+
 I am working on Git
\ No newline at end of file
GitMachine $


============== Gitignore ==============

GitMachine $ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        mylogfile

nothing added to commit but untracked files present (use "git add" to track)
GitMachine $




============================ Branching ===============
git branch
git branch 

git branch b10 master


git checkout b1
git branch
vi fileb1.txt
git status
git add fileb1.txt
git status
git commit -m "This sfor branch b1"
git status
git log --oneline

git checkout master
 git branch
git log --oneline


f2c6b44ad7cace8  ---HEAD -> B100

GitMachine $ git merge B100 master
Updating 6f7d3f2..f2c6b44
Fast-forward
 a.py | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 a.py
GitMachine $
GitMachine $
GitMachine $ git log --oneline
f2c6b44 (HEAD -> master, B100) Added a PY program


======== remote repo =====

echo "# aug2023" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/discover-devops/aug2023.git
git push -u origin main

==============================

Remote Libraries
Create a remote repsitory at gitHUB
git remote add origin https://<>
git remote -v
git push origin master
git push origin b1
===============================


=========================================================== Jenkins =========================================

https://www.jenkins.io/doc/book/installing/linux/#weekly-release


Installation of Java
java -version
sudo apt update
sudo apt install openjdk-11-jre
java -version


Install Jenkins
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins


Start Jenkins
sudo systemctl start jenkins
sudo systemctl status jenkins
sudo systemctl enable jenkins


===================================================


export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
export PATH=$PATH:$JAVA_HOME/bin
echo $PATH




===============================

Install Tomcat
------------------

Step 1: Install Java

sudo apt-get update
sudo apt-get install default-jdk

========================================
Step 2: Install Tomcat

sudo apt install unzip wget

cd /tmp

wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.92/bin/apache-tomcat-8.5.92.zip
           
unzip apache-tomcat-*.zip

sudo mkdir -p /opt/tomcat

sudo mv apache-tomcat-8.5.92 /opt/tomcat/

8080 ----------> Tomcat Port
8080 ----------> Used byy Jenkins

==============================================

Step 3: Change Tomcat Server Port

cd /opt/tomcat/apache-tomcat-8.5.92/conf/
vi server.xml file

\_ port ---- 8080 ----> 9090

============================

Step 4: Change Permission of Scripts in /bin ----> to Restart TomCat

cd /opt/tomcat/apache-tomcat-8.5.92/bin
ls -la
sudo chmod +x *

/opt/tomcat/apache-tomcat-8.5.47/bin/shutdown.sh
/opt/tomcat/apache-tomcat-8.5.47/bin/startup.sh


===================================

Jenkins -----> Communicate with this server
Jenkins can deply app lication here

\_ Install 2 plugins:

Install Plugins: 
Copy Artifact   ----- Done
Deploy to container   --- Done


Running all the tomcat related commands + configuration

\_ we need a user locallly


https://github.com/discover-devops/JenkinsMaven.git



https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.92/bin/apache-tomcat-8.5.92.zip
